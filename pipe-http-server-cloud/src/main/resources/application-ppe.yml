authentication:
  identity:
    url: "${IDENTITY_URL}"
    validate.token.path: "${IDENTITY_VALIDATE_PATH}"
    issue.token.path: "${IDENTITY_ISSUE_TOKEN_PATH}"
    client:
      id: "${IDENTITY_CLIENT_ID}"
      secret: "${IDENTITY_CLIENT_SECRET}"
    users:
      nodeA:
        clientId: "${NODE_A_CLIENT_UID}"
        roles:
          - PIPE_READ
          - REGISTRY_WRITE
      nodeB:
        clientId: "${NODE_B_CLIENT_UID}"
        roles:
          - PIPE_READ
          - REGISTRY_WRITE
      performance:
        clientId: "${PERFORMANCE_TEST_CLIENT_UID}"
        roles:
          - PIPE_READ
      nodeC:
        clientId: "${NODE_C_CLIENT_UID}"
        roles:
          - PIPE_READ
      admin:
        clientId: "${ADMIN_CLIENT_UID}"
        roles:
          - REGISTRY_DELETE
          - BOOTSTRAP_NODE
          - PIPE_READ
      qSupport:
        clientId: "${Q_SUPPORT_UID}"
        roles:
          - BOOTSTRAP_NODE

persistence:
  compact:
    schedule.cron: "0 14 0/1 * * ?"
    deletions:
      enabled: true
      threshold: 30d
  read:
    limit: 500
    max-batch-size: 1000000
    retry-after: 600000
    expected-node-count: 3000
    cluster-db-pool-size: 24
    work-mem-mb: 2000