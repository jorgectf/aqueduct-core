micronaut:
  metrics.binders:
    jvm.enabled: true
    web.enabled: true
    processor.enabled: true
    jdbc.enabled: true
  security:
    enabled: true
    token.jwt:
      enabled: true
      bearer.enabled: true
  caches:
    identity-cache:
      expire-after-write: 10m
    latest-offset-cache:
      expire-after-write: 10s
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
  executors:
    io:
      type: fixed
      nThreads: 10
  server:
    netty:
      worker:
        threads: 100
    thread-selection: AUTO
    idle-timeout: 20s

endpoints:
  all:
    enabled: true
    path: /endpoints
    sensitive: true

datasources:
  pipe:
    jdbc-url: "jdbc:postgresql://${POSTGRE_SERVER}/${POSTGRE_DATABASE}?prepareThreshold=0"
    username: "${POSTGRE_USERNAME}"
    password: "${POSTGRE_PASSWORD}"
    driver-class-name: org.postgresql.Driver
    maximum-pool-size: 10
    max-lifetime: 600000
    leak-detection-threshold: 60000
    validation-timeout: 250
  registry:
    jdbc-url: "jdbc:postgresql://${POSTGRE_SERVER}/${POSTGRE_DATABASE}"
    username: "${POSTGRE_USERNAME}"
    password: "${POSTGRE_PASSWORD}"
    driver-class-name: org.postgresql.Driver
    maximum-pool-size: 10
    max-lifetime: 600000
    leak-detection-threshold: 60000
    validation-timeout: 250
  compaction:
    jdbc-url: "jdbc:postgresql://${POSTGRE_SERVER}/${POSTGRE_DATABASE}"
    username: "${POSTGRE_USERNAME}"
    password: "${POSTGRE_PASSWORD}"
    driver-class-name: org.postgresql.Driver
    maximum-pool-size: 1
    max-lifetime: 600000
    leak-detection-threshold: 300000
    validation-timeout: 250

authentication:
  identity:
    delay: 500ms
    attempts: 3
    consumes: "${IDENTITY_CONSUMES}"

location:
  delay: 500ms
  attempts: 3
  reset: 5s
  url: "${LOCATION_URL}"
  clusters.get.path: "${LOCATION_CLUSTERS_GET_PATH}"
  clusters.get.path.filter.pattern: "${LOCATION_CLUSTERS_GET_PATH_FILTER_PATTERN}"
  clusters.cache.expire-after-write: 1h

pipe:
  server:
    url: "${PIPE_URL}"
  delay: 500ms
  attempts: 1
  reset: 240s

metrics.interceptor.enabled: true

registry:
  mark-offline-after: 25m
  remove-offline-after: 7d

compression:
  threshold-in-bytes: 1024
  logging: true

bootstrap.retry.logging: true
